// <auto-generated />
using System;
using CashRegister.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashRegister.Data.Migrations
{
    [DbContext(typeof(CashRegisterContext))]
    [Migration("20190713220932_AddedSeedData")]
    partial class AddedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ante",
                            LastName = "Antić"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ivo",
                            LastName = "Ivić"
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.CashierRegister", b =>
                {
                    b.Property<int>("CashierId");

                    b.Property<int>("RegisterId");

                    b.HasKey("CashierId", "RegisterId");

                    b.HasIndex("RegisterId");

                    b.ToTable("CashiersRegisters");

                    b.HasData(
                        new
                        {
                            CashierId = 1,
                            RegisterId = 2
                        },
                        new
                        {
                            CashierId = 1,
                            RegisterId = 4
                        },
                        new
                        {
                            CashierId = 2,
                            RegisterId = 2
                        },
                        new
                        {
                            CashierId = 2,
                            RegisterId = 1
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Barcode");

                    b.Property<int?>("CashierId");

                    b.Property<int>("Count");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.Property<float>("TaxRate");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = new Guid("00000000-0000-0000-0000-000000000000"),
                            Count = 26,
                            Name = "Coca Cola",
                            Price = 6f,
                            TaxRate = 5f
                        },
                        new
                        {
                            Id = 2,
                            Barcode = new Guid("00000000-0000-0000-0000-000000000000"),
                            Count = 101,
                            Name = "Kruh",
                            Price = 3f,
                            TaxRate = 5f
                        },
                        new
                        {
                            Id = 3,
                            Barcode = new Guid("00000000-0000-0000-0000-000000000000"),
                            Count = 59,
                            Name = "Pringles",
                            Price = 15f,
                            TaxRate = 25f
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.ProductReceipt", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<Guid>("ReceiptId");

                    b.Property<int>("Count");

                    b.HasKey("ProductId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ProductsReceipts");

                    b.HasData(
                        new
                        {
                            ProductId = 3,
                            ReceiptId = new Guid("3178fa30-d8a9-4b10-9e98-4b060ba82769"),
                            Count = 15
                        },
                        new
                        {
                            ProductId = 2,
                            ReceiptId = new Guid("4228fa30-d8a9-4b10-9e98-4b060ba82769"),
                            Count = 16
                        },
                        new
                        {
                            ProductId = 1,
                            ReceiptId = new Guid("4228fa30-d8a9-4b10-9e98-4b060ba82769"),
                            Count = 5
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CashierId");

                    b.Property<DateTime>("Date");

                    b.Property<float>("ExciseDutyPrice");

                    b.Property<float>("PriceWithTax");

                    b.Property<float>("PriceWithoutTax");

                    b.Property<float>("StandardProductsPrice");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3178fa30-d8a9-4b10-9e98-4b060ba82769"),
                            CashierId = 1,
                            Date = new DateTime(2019, 7, 14, 0, 9, 31, 870, DateTimeKind.Local).AddTicks(8370),
                            ExciseDutyPrice = 15f,
                            PriceWithTax = 22f,
                            PriceWithoutTax = 8f,
                            StandardProductsPrice = 7f
                        },
                        new
                        {
                            Id = new Guid("4228fa30-d8a9-4b10-9e98-4b060ba82769"),
                            CashierId = 1,
                            Date = new DateTime(2019, 7, 14, 0, 9, 31, 876, DateTimeKind.Local).AddTicks(6970),
                            ExciseDutyPrice = 15f,
                            PriceWithTax = 22f,
                            PriceWithoutTax = 8f,
                            StandardProductsPrice = 7f
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Registers");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.CashierRegister", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Cashier", "Cashier")
                        .WithMany("CashiersRegisters")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CashRegister.Data.Entities.Models.Register", "Register")
                        .WithMany("CashiersRegisters")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Product", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Cashier")
                        .WithMany("ProductsSold")
                        .HasForeignKey("CashierId");
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.ProductReceipt", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Product", "Product")
                        .WithMany("ProductsReceipts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CashRegister.Data.Entities.Models.Receipt", "Receipt")
                        .WithMany("ProductsReceipts")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Receipt", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Cashier", "Cashier")
                        .WithMany("Receipts")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
